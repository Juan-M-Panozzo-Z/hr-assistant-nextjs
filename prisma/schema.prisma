// para generar los nuevos modelos en la base de datos ejecutar npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  phone      String?
  name       String
  lastname   String
  password   String
  legajo     Int          @unique
  sectorId   Int          @default(1)
  sector     Sector       @relation(fields: [sectorId], references: [id])
  typeId     Int          @default(2)
  type       UserType     @relation(fields: [typeId], references: [id])
  checkInOut CheckInOut[]
  enabled    Boolean      @default(false)
  schedules  Schedule[]
  Shift      Shift?       @relation(fields: [shiftId], references: [id])
  shiftId    Int?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Sector {
  id         Int        @id @default(autoincrement())
  name       String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  users      User[]
  schedules  Schedule[]
  shifts     Shift[]
  isChildren Boolean    @default(false)
  parentId   Int?
}

model Shift {
  id         Int      @id @default(autoincrement())
  name       String
  startTime  String
  endTime    String
  startTime2 String?
  endTime2   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  users      User[]
  sectorId   Int?
  sector     Sector?  @relation(fields: [sectorId], references: [id])
}

model Schedule {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  sectorId   Int
  sector     Sector   @relation(fields: [sectorId], references: [id])
  date       String
  startTime  String
  endTime    String
  startTime2 String?
  endTime2   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model CheckInOut {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  checkType String
  createdAt DateTime @default(now())
  note      String?
}
